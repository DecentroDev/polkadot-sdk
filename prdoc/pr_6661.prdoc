title: '`txpool api`: `remove_invalid` call improved'
doc:
- audience: Node Dev
  description: |-
    ### Note
    This PR depends on work done in #6647

    ### Description
    Currently the transaction which is reported as invalid by a block builder (or `removed_invalid` by other components) is silently skipped.

    This PR improves this behavior. The transaction pool `report_invalid` function now accepts optional error associated with every reported transaction, and also the optional block hash which provides  hints how reported transaction shall be handled. The following API change is proposed:
    https://github.com/paritytech/polkadot-sdk/blob/8c8e0336a2697c24d54cff8675c3de7e0ad5a733/substrate/client/transaction-pool/api/src/lib.rs#L293-L310

    Depending on error, the transaction pool can decide if transaction shall be removed from the view only or entirely from the pool. Invalid event will be dispatched if required.


    ### Notes for reviewers

    - Actual logic of removing invalid txs  is impleneted in [`ViewStore::report_invalid`](https://github.com/paritytech/polkadot-sdk/blob/0fad26c43a65bfb371d667278981d3c68c3ce9d6/substrate/client/transaction-pool/src/fork_aware_txpool/view_store.rs#L657-L680). Method's doc explains the flow.
    - This PR changes `HashMap` to `IndexMap` in revalidation logic. This is to preserve the original order of transactions (mainly for purposes of unit tests).



    fixes: #6008
crates:
- name: sc-transaction-pool-api
  bump: minor
- name: sc-transaction-pool
  bump: minor
- name: sc-rpc-spec-v2
  bump: minor
- name: sc-rpc
  bump: minor
- name: sc-basic-authorship
  bump: minor
